"use strict";(globalThis.webpackChunkfrontend=globalThis.webpackChunkfrontend||[]).push([[3657],{23657:(e,r,n)=>{n.r(r),n.d(r,{clearBoundingBoxCache:()=>y,computeIconLayerResourceSize:()=>h,computeLayerResourceSize:()=>f,computeLayerSize:()=>p,computeObjectLayerResourceSize:()=>m});var t=n(76200),o=n(10064),i=n(59026),s=n(92026),u=n(41414),c=n(53720);let a=l();function l(){return new i.Z(50)}function y(){a=l()}function f(e,r){if("icon"===e.type)return h(e,r);if("object"===e.type)return m(e,r);throw new o.Z("symbol3d:unsupported-symbol-layer","computeLayerSize only works with symbol layers of type Icon and Object")}async function p(e,r){if("icon"===e.type)return function(e,r){return h(e,r).then((r=>{if(null==e.size)return r;const n=r[0]/r[1];return n>1?[e.size,e.size/n]:[e.size*n,e.size]}))}(e,r);if("object"===e.type)return async function(e,r){const n=await m(e,r);return(0,c.$K)(n,e)}(e,r);throw new o.Z("symbol3d:unsupported-symbol-layer","computeLayerSize only works with symbol layers of type Icon and Object")}async function h(e,r){if(e.resource.href)return(n=e.resource.href,(0,t.default)(n,{responseType:"image"}).then((e=>e.data))).then((e=>[e.width,e.height]));var n;if(e.resource.primitive)return(0,s.pC)(r)?[r,r]:[256,256];throw new o.Z("symbol3d:invalid-symbol-layer","symbol layers of type Icon must have either an href or a primitive resource")}function m(e,r){return async function(e,r){if(!e.isPrimitive){const r=e.resource.href,t=a.get(r);if(void 0!==t)return Promise.resolve(t);const o=await Promise.all([n.e(1378),n.e(2029),n.e(5158),n.e(7934),n.e(5500)]).then(n.bind(n,55500)),i=await o.fetch(r,{disableTextures:!0});return a.put(r,i.referenceBoundingBox),i.referenceBoundingBox}let t=null;if(e.resource&&e.resource.primitive&&(t=(0,u.Ue)((0,c.Uz)(e.resource.primitive)),(0,s.pC)(r)))for(let n=0;n<t.length;n++)t[n]*=r;return t?Promise.resolve(t):Promise.reject(new o.Z("symbol:invalid-resource","The symbol does not have a valid resource"))}(e,r).then((e=>(0,u.dp)(e)))}}}]);
//# sourceMappingURL=3657.08373e75.chunk.js.map